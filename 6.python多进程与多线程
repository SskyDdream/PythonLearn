python多进程与多线程
    知识点：python3开发多进程程序、进程间通信、进程同步、进程池、python3多线程程序

多进程
    多进程就是系统可以同时运行多个任务，例如我们的电脑上运行着QQ、浏览器、音乐播放器等。
    在操作系统中，每个任务就是一个进程。每个进程至少做一件事，多数进程会做很多事，例如影音播放器，要播放画面，同时要播放声音，
    在一个进程中，就有很多线程，每个线程做一件事，多个线程同时运行就是多线程

利用多进程提高程序运行效率
    计算机的两大核心为运算器和存储器，当我们运行一个程序来计算3+5，计算机操作系统会启动一个进程，并要求运算器派过来一个cpu来完成任务；
    当我们运行一个程序来打开文件，操作系统会启动存储器的功能将硬盘中的文件数据导入到内存中

进程间的通信
    进程有自己独立的运行空间，它们之间所有的变量、数据是隔绝的，A进程中的变量test与B进程中的变量没有任何关系，
    这就意味着要使用一些特殊的手段才能实现它们之间的数据交换，multiprocessing模块提供了管道Pipe和队列Queue两种方式

    Pipe
        如果把两个进程想象成两个密封的箱子，那么Pipe就像是连接两个箱子的一个管道，借助它可以实现两个箱子之间简单的数据交换
        方法： conn1， conn2 = Pipe() ,写入数据使用send方法，读取数据使用recv方法
    Queue
         queue = Queue() 将queue作为参数导入子进程中，写入数据q.put(), 读取数据q.get()
         Queue.empty()方法可以判断队列中是否为空

进程同步
    value是一个方法，可以实现数据在多进程之间共享，该方法的返回值即Value对象可以看做一个全局共享的变量。
    第一个参数是共享的数据类型，第二个参数是Value对象的值，在进程中可以通过Value对象的value属性获取

    Lock类封装的锁操作，使用acquire()， release()方法释放锁 ；（lock= Lock() with lock：前面的简写）

进程池
    进程池Pool可以批量创建子进程，进程池内维持一个固定的进程数量，当有任务到来时，就去池子中取一个进程处理任务，处理完毕后，进程被返回进程池。
    如果一个任务到来而池子的进程都被占用了，那么任务就需要等待某一个进程执行完。。。 os.getpid()获取当前进行ID
   例子：
    p = Pool(4) 创建4个进程池
    for i in range(1, 6): 将5个任务加入到进程池中
        p.apply_async(task, args=(i, )) 异步启动进程池
    p.close() 关闭进程池
    p.join()

多线程

    python的threading模块提供了对多线程的支持，threading.get_ident() 获取当前线程的ID
