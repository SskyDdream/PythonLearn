Python基础语法

Python开发环境：python2.7和python3

  Python提供了丰富的基础模块和第三方模块，可以直接在程序中使用，这些模块包括了数据库、Web开发、
  文件操作等一系列的功能，避免了重复造轮子，提高编程效率。

Python优点与缺点与应用场景
  python最大的优势就是简单，少量的代码实现复杂的功能，例如实现一个简单的命令行聊天室，100行代码就能解决了。
  缺点方面，python是一个解释型的编程语言，每次执行的时候会一行一行的解释执行，因此执行的性能比不上编译型的语言。
  性能的损失之外，python程序的源代码是完全开放，因为python程序是脚本，不是编译成二进制分发的，通常很难进行代码保护。
  python最主要的应用场景包括网络爬虫、Web开发、自动化运维、数据分析等领域

python语言的特点
  跨平台：python程序几乎可以在任何主流平台下运行
  解释型：在程序运行的时候，通过解释器对python程序逐行进行解释，然后直接运行。编译的结果会被保存在.pyc文件中，
        当程序下一次运行的时候会先在硬盘寻找.pyc文件，如果找到直接载入，否则重复上面的过程。
        因此.pyc文件的目的就在于可以复用
  脚本语言：这主要强调python采用的是解释执行的方式运行的。脚本语言一般都有更高层次的抽象和封装，更少的代码量
          高可读性、学习曲线更平缓。
  动态语言：也就是可以在运行的过程中修改代码。可以在运行的时候添加新的函数、对象、
  默认utf-8编码： python3默认使用uft-8编码可以正常解析中午；python2需要在代码首行进行声明

执行代码
  <1>使用python3命令指定脚本 python3 执行
  <2>为脚本添加可执行权限，chmod +x xxxx.py （./xxx.py 代表当前目录下的脚本）

数据类型与变量
 1 None和布尔型  None表示空对象，与空字符串、数值0不同；python中用True和False来表示布尔值，非空字符串的布尔值为True。
   python内置方法bool()可以用来判断对象的布尔值，如 bool(None)，False
 2 保留字与标识符 保留字又称关键字，每种语言都有自己的一套预先保留的特殊标识符。
   标识符（变量名）通常定义为计算机语言中允许用作名字的有效字符串集合，保留字和内置方法名称不能用作标识符
 3 整数、小数型、列表、元祖、字典、集合、字符串

变量命名规则：驼峰命名法和下划线命名下划线命名法
 小驼峰：第一个单词首字母小写，后面其他单词首字母大写 如shiYanLou
 大驼峰：每个单词首字母都大写，FirstName
 下划线命名法：第一个字符必须是字母或者一个下划线，其他部分可以由字母、数字、下划线组成


运算符：
 算术运算符：+、-、*、/、%、**、//
          % 取模，返回除法的余数
          ** 返回X的Y次幂
          // 取整除 返回商的整数部分（向下取整）
 比较运算符：==  !=  >  <  >=  <=
 赋值运算符：= += *= -= /= %= **= //=
 位运算符： & 、\  ^ ~ <<  >>
          & 按位与运算符：参与运算的两个值，如果两个相应位都为1，则该位结果位1，否则为0
          \ 按位或运算符：参与运算的两个值，只要对应的两个二进位有一个为1时，结果位就为1
          ^ 按位异或运算符：当两个对应的二进位相异时，结果为1
          ～ 按位取反运算符： 对数据的每个二进制位取反，即把1改为0，0改为1
          << 左移动运算符：运算数的各二进位全部左移若干位，由"<<"右边的数指定移动的位数，高位丢弃，低位补0
          >> 右移动运算符 左边的运算数把各二进位全部右移若干位， 由">>"右边的数指定移动的位数
 逻辑运算符：and or not
 成员运算符： in not in
 身份运算符： is is not

 运算符优先级：
 1 **
 2 ～ + -（一元加号和减号）
 3 * / % //
 4 + -
 5 >> <<
 6 &
 7 ^
 8 <= < > <=
 9 <> == !=
 10 = %= /= //= -= += *= **=
 11 is is not
 12 in not in
 13 not and or

条件判断和循环
if xxx:
    pass
elif xxx:
    pass
else:
    pass

循环控制
for循环  while循环（break表示停止当前循环和continue表示跳过当前循环）

终端运行python程序
命令行参数 sys.argv[0]为脚本名称 sys.argv[1]为第一个参数

__name__与__main__
在python中一个.py文件就是一个模块，每一个模块又一个内置变量就是__name__。
如果单独运行一个.py文件，它的__name__的值就是__main__，但如果把一个.py文件当作一个模块导入，它的值就是文件名

异常处理：
异常的类型：
NameError:访问一个未定义的变量
SyntaxError:语法错误
IndexError:对于一个序列，访问的索引超过了序列的范围
KeyError:访问一个不存在的字典key
ValueError:传入无效的参数
AttributeError:访问类对象中不存在的属性

异常的处理方式：
try:
    有可能出现异常的代码
except 异常类型名称：
    处理代码
finally：


Python包管理工具
  pip的常见命令如下：
  显示版本和路径： pip3 --version
  升级pip: sudo pip3 install --upgrade pip
  安装包：  pip3 install package
  卸载包：  pip3 uninstall package
  升级包：  pip3 install --upgrade package
  查看已安装的包： pip3 list


